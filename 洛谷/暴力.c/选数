#include <stdio.h>
#include <math.h>

// 判断一个数是否为素数
int is_prime(int num) {
    if (num <= 1) return 0;
    if (num == 2) return 1;
    if (num % 2 == 0) return 0;
    for (int i = 3; i <= sqrt(num); i += 2) {
        if (num % i == 0) return 0;
    }
    return 1;
}

// 递归生成组合并计算素数和
void find_combinations(int* arr, int n, int k, int start, int depth, int sum, int* count) {
    if (depth == k) {  // 如果已经选择了 k 个数
        if (is_prime(sum)) {
            (*count)++;
        }
        return;
    }
    
    for (int i = start; i < n; i++) {
        find_combinations(arr, n, k, i + 1, depth + 1, sum + arr[i], count);
    }
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int count = 0;
    find_combinations(arr, n, k, 0, 0, 0, &count);
    printf("%d\n", count);
    
    return 0;
}